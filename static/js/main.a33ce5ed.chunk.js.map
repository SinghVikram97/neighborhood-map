{"version":3,"sources":["component/Map.js","API/index.js","component/ListItem.js","component/VenueList.js","component/SideBar.js","App.js","serviceWorker.js","index.js"],"names":["MyMapComponent","withScriptjs","withGoogleMap","props","react_default","a","createElement","lib","defaultZoom","zoom","defaultCenter","lat","lng","center","markers","filter","marker","isVisible","map","index","arr","venueInfo","venues","find","venue","id","key","position","onClick","handleMarkerClick","animation","length","google","maps","Animation","BOUNCE","DROP","isOpen","bestPhoto","src","concat","prefix","suffix","name","Map","Object","assign","this","googleMapURL","loadingElement","style","height","containerElement","width","mapElement","Component","Helper","keys","client_id","client_secret","v","join","urlParams","Accept","endPoint","method","requestData","headers","fetch","baseURL","auth","urlBuilder","then","res","json","SquareAPI","simpleFetch","venue_id","SideBar","_this","className","handleListItemClick","categories","icon","alt","ListItem","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleFilterVenues","state","query","trim","toLowerCase","includes","handleChange","e","setState","target","value","isMatched","updateSuperState","type","placeholder","onChange","VenueList","App","closeAllMarkers","venueDetails","newVenue","response","console","log","obj","_this2","search","near","limit","results","geocode","feature","geometry","location","component_SideBar","component_Map","Boolean","window","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a33ce5ed.chunk.js","sourcesContent":["/*global google*/\nimport React,{Component} from \"react\"\n\nimport { withScriptjs, withGoogleMap, GoogleMap, Marker,InfoWindow} from \"react-google-maps\"\n\nconst MyMapComponent = withScriptjs(withGoogleMap((props) =>\n\n    <GoogleMap\n        defaultZoom={8}\n        zoom={props.zoom}\n        defaultCenter={{ lat: -34.397, lng: 150.644 }}\n        center={props.center}\n    >\n\n        {props.markers &&\n            props.markers\n                .filter(marker=>marker.isVisible)\n                .map((marker,index,arr)=>{\n\n                 const venueInfo=props.venues.find((venue)=>{\n                     return venue.id===marker.id;\n                 });\n\n                 return(\n                    <Marker\n                        key={index}\n                        position={{lat:marker.lat,lng:marker.lng}}\n                        onClick={()=>props.handleMarkerClick(marker)}\n                        animation={arr.length===1?google.maps.Animation.BOUNCE:google.maps.Animation.DROP}\n                    >\n                        {marker.isOpen && venueInfo.bestPhoto &&\n                        <InfoWindow>\n                            <div>\n                                <img src={`${venueInfo.bestPhoto.prefix}200x200${venueInfo.bestPhoto.suffix}`}/>\n                                <p><strong>{venueInfo.name}</strong></p>\n                            </div>\n                        </InfoWindow>}\n                    </Marker>\n                )})\n        }\n    </GoogleMap>\n));\n\nclass Map extends Component{\n\n       render(){\n        return(\n            <MyMapComponent\n                {...this.props}\n                googleMapURL=\"https://maps.googleapis.com/maps/api/js?v=3.exp&key=AIzaSyBP7rV74uLMGdvy8rP17jnp2jVmJ9tXqkg\"\n                loadingElement={<div style={{ height: `100%` }} />}\n                containerElement={<div style={{ height: `100%`,width:`75%` }} />}\n                mapElement={<div style={{ height: `100%` }} />}\n            />\n        )\n    }\n}\n\nexport default Map;","class Helper{\n    static baseURL(){\n        return \"https://api.foursquare.com/v2\";\n    }\n    // client_id=blah&client_secret=blah&v=blah\n    static auth(){\n        const keys={\n            client_id:'RJXDZ3NCXRVZO1CTXMNENSCCA1NWIGG5SV0DSAUGHAUZ2LMX',\n            client_secret:'YPFNNHKRYYOZOD4G4ISWOGRKXILJPYAFTSS5SEYQEIKEX03I',\n            v:\"20181213\"\n        };\n        return Object.keys(keys)\n            .map(key=>`${key}=${keys[key]}`)\n            .join('&')\n    }\n    static urlBuilder(urlParams){\n        if(!urlParams){\n            return \"\"\n        }\n        return Object.keys(urlParams)\n            .map(key=>`${key}=${urlParams[key]}`)\n            .join('&');\n    }\n    static headers(){\n        return{\n            Accept:\"application/json\"\n        }\n    }\n    static simpleFetch(endPoint,method,urlParams){\n        let requestData={\n            method,\n            headers:Helper.headers()\n        };\n        return fetch(`${Helper.baseURL()}${endPoint}?${Helper.auth()}&${Helper.urlBuilder(urlParams)}`,\n               requestData\n        ).then(res=>res.json())\n    }\n}\nexport default class  SquareAPI{\n    static search(urlParams){\n        return Helper.simpleFetch(\"/venues/search\",\"GET\",urlParams)\n    }\n    static venueDetails(venue_id){\n        return Helper.simpleFetch(`/venues/${venue_id}`,\"GET\");\n    }\n    static venuePhotos(venue_id){\n        return Helper.simpleFetch(`/venues/${venue_id}/photos`,\"GET\");\n    }\n}","import React,{Component} from \"react\";\n\nclass SideBar extends Component{\n    render(){\n        return (<li className=\"listItem\" onClick={()=>this.props.handleListItemClick(this.props)}>\n            <img src={this.props.categories[0].icon.prefix+\"32\"+this.props.categories[0].icon.suffix} alt={this.props.categories[0].name}/>\n            {this.props.name}\n        </li>)\n    }\n}\nexport default SideBar;","import React,{Component} from \"react\";\nimport ListItem from \"./ListItem\"\nclass SideBar extends Component{\n    render(){\n        return (\n        <ol className=\"venueList\">\n            {\n                this.props.venues.map((venue,index)=>{\n                    return <ListItem key={index}{...venue} handleListItemClick={this.props.handleListItemClick}/>\n                })\n            }\n        </ol>)\n    }\n}\nexport default SideBar;","import React,{Component} from \"react\";\nimport VenueList from \"./VenueList\"\nclass SideBar extends Component{\n\n    constructor(){\n        super();\n        this.state={\n            query:\"\",\n            venues:[]\n        };\n    }\n\n    handleFilterVenues=()=>{\n        if(this.state.query.trim()!==\"\"){\n            const venues=this.props.venues.filter((venue)=>{\n                return venue.name.toLowerCase().includes(this.state.query.toLowerCase())\n            });\n            return venues;\n        }\n        return this.props.venues;\n    };\n\n    handleChange=(e)=>{\n        this.setState({query:e.target.value});\n        const markers=this.props.venues.map((venue)=>{\n            const isMatched=venue.name.toLowerCase().includes(e.target.value.toLowerCase());\n            const marker=this.props.markers.find((marker)=>{\n                return (marker.id===venue.id);\n            });\n            if(isMatched){\n                marker.isVisible=true;\n            }\n            else{\n                marker.isVisible=false;\n            }\n            return marker;\n        });\n        this.props.updateSuperState({markers})\n    };\n    render(){\n        return (<div className=\"sideBar\">\n            <input type={\"search\"} id={\"search\"} placeholder={\"Filter Venues\"} onChange={this.handleChange}/>\n            <VenueList {...this.props} venues={this.handleFilterVenues()} handleListItemClick={this.props.handleListItemClick}/>\n        </div>)\n    }\n}\nexport default SideBar;","import React, { Component } from 'react';\nimport Map from './component/Map';\nimport './App.css';\nimport SquareAPI from \"./API/index\"\nimport SideBar from './component/SideBar'\n\nclass App extends Component {\n\n  constructor(){\n      super();\n      this.state={\n          venues:[],\n          markers:[],\n          center:[],\n          zoom:12,\n          updateSuperState:(obj)=>{\n              this.setState(obj);\n          }\n      };\n  }\n\n  closeAllMarkers=()=>{\n      const markers=this.state.markers.map(marker=>{\n          marker.isOpen=false;\n          return marker\n      });\n      this.setState({markers:Object.assign(this.state.markers,markers)})\n  };\n\n  handleMarkerClick=(marker)=>{\n    this.closeAllMarkers();\n    marker.isOpen=true;\n    this.setState(({markers:Object.assign(this.state.markers,marker)}));\n    const venue=this.state.venues.find((venue)=>{\n       return venue.id===marker.id;\n    });\n    // console.log(venue,\"NEW VENUE\");\n    SquareAPI.venueDetails(marker.id).then((res)=>{\n        // console.log(res);\n        const newVenue=Object.assign(venue,res.response.venue);\n        // console.log(newVenue,\"new Venue\");\n        this.setState({venues:Object.assign(this.state.venues,newVenue)});\n    })\n  };\n\n  handleListItemClick=(venue)=>{\n    const marker=this.state.markers.find((marker)=>{\n       return marker.id===venue.id;\n    });\n    this.handleMarkerClick(marker);\n    console.log(venue);\n  };\n\n  componentDidMount(){\n    SquareAPI.search({\n        near:\"Austin,TX\",\n        query:\"tacos\",\n        limit:10\n    }).then((results)=>{\n      //console.log(results);\n        const {venues}=results.response;\n        const {center}=results.response.geocode.feature.geometry;\n        const markers=venues.map((venue)=>{\n            return {\n                lat:venue.location.lat,\n                lng:venue.location.lng,\n                // To show info windows hidden by default\n                isOpen:false,\n                // To show markers if true\n                isVisible:true,\n                id:venue.id\n            }\n        });\n        this.setState({venues,center,markers});\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <SideBar {...this.state} handleListItemClick={this.handleListItemClick}/>\n        <Map {...this.state}\n         handleMarkerClick={this.handleMarkerClick}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}